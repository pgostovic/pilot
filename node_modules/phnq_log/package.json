{
  "name": "phnq_log",
  "description": "JavaScript logging utility",
  "homepage": "https://github.com/pgostovic/phnq_log",
  "keywords": [
    "phnq",
    "logging",
    "server",
    "client",
    "browser"
  ],
  "author": {
    "name": "Patrick Gostovic",
    "email": "pg@phnq.org"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/pgostovic/phnq_log.git"
  },
  "main": "phnq_log.js",
  "version": "1.0.4",
  "dependencies": {
    "phnq_core": "1.0.x",
    "optimist": "0.3.4"
  },
  "readme": "phnq_log\n========\nThe phnq_log module is a simple logging utility. It's generic JavaScript, so\nit works equally well on the server (node.js) and the client (browser).\n\nBasic Usage\n-----------\n\nImport the phnq_log module:\n\n\tvar phnq_log = require(\"phnq_log\");\n\nOr on the client just include the file.\n\nSet the global logging level to one of none, error, warn, info, debug:\n\n\tphnq_log.setLevel(\"debug\");\n\nCreate the logger:\n\n\tvar logger = new phnq_log.Logger(\"MyCategory\");\n\nDo some logging:\n\n\tlogger.debug(\"Hello!\");\n\noutput:\n\n\t2012-04-21 10:07:30.920 [DEBUG] MyCategory - Hello!\n\nPassing objects as arguments:\n\n\tvar obj = { foo: \"bar\", num: 42 };\n\tlogger.debug(\"Object is: \", obj);\n\noutput:\n\n\t2012-04-21 10:07:30.920 [DEBUG] MyCategory - Object is:  { foo: 'bar', num: 42 }\n\n\nScoping Convenience\n-------------------\n\nYou probably want to create one logger per JavaScript file or block of\nfunctionality. You probably also want to wrap your JavaScript file's\ncode in a self-executing function to limit the scope of locally\ndeclared  variables.  For example:\n\n\t(function(){\n\t\tvar x = 5;\n\t\t// x is only visible within this block.\n\t})();\n\nWith phnq_log you can do both in one convenient statement:\n\n\tphnq_log.exec(\"MyCategory\", function(logger)\n\t{\n\t\tlogger.debug(\"Hello!\");\n\t});\n\nWrap each of your JavaScript files like this to get an individual logger for\neach file.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/pgostovic/phnq_log/issues"
  },
  "_id": "phnq_log@1.0.4",
  "_from": "phnq_log@1.0.x"
}
